version: '3.8'

services:
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    command: ["--logtostderr", "1", "--proactor_threads", "4"]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - DFLY_maxmemory=1gb
    ports:
      - "6379:6379"
    volumes:
      - dragonfly-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-lc", "redis-cli -h 127.0.0.1 -p 6379 ping | grep PONG || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    init: true
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - REDIS_HOST=dragonfly
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USERNAME=${REDIS_USERNAME}
    depends_on:
      - dragonfly
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    restart: unless-stopped
    stop_grace_period: 10s
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:'+process.env.PORT+'/health').then(r=>{if(r.ok)process.exit(0);process.exit(1)}).catch(()=>process.exit(1))"]
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  dragonfly-data:
